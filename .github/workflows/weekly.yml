name: Weekly tests

on:
  push:
    branches: ['weekly-tests']
  schedule:
    # At 00:00 on Monday
    - cron: "40 06 * * WED"

jobs:
  latest p9, latest matplotlib:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: 3.12

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install a specific version of uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Make uv use system python
        run: echo "UV_SYSTEM_PYTHON=true" >> $GITHUB_ENV

      - name: Install Packages
        run: |
          uv pip install ".[extra,test]"
          uv pip install --upgrade git+https://github.com/matplotlib/matplotlib

      - name: Environment Information
        run: |
          uv pip list

      - name: Run Tests
        run: |
          make test

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: result-images
          path: result_images/
          if-no-files-found: ignore

  latest p9, latest pandas:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: 3.12

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install a specific version of uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Make uv use system python
        run: echo "UV_SYSTEM_PYTHON=true" >> $GITHUB_ENV

      - name: Install Packages
        shell: bash
        run: |
          uv pip install --upgrade git+https://github.com/pandas-dev/pandas
          uv pip install ".[extra,test]"

      - name: Environment Information
        shell: bash
        run: |
          uv pip list

      # to do: think about catching deprecations earlier
      - name: Run Tests
        shell: bash
        run: |
          make test

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: result-images
          path: result_images/
          if-no-files-found: ignore

  stable p9, latest matplotlib:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: 3.12

    steps:
      - name: Get latest release with tag from GitHub API
        id: latestrelease
        shell: bash
        run: |
          echo "::set-output name=releasetag::$(curl -s https://api.github.com/repos/has2k1/plotnine/releases/latest | jq '.tag_name' | sed 's/\"//g')"

      - name: Confirm Release Tag
        shell: bash
        run: |
          echo ${{ steps.latestrelease.outputs.latestrelease }}

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.latestrelease.outputs.latestrelease }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install a specific version of uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Make uv use system python
        run: echo "UV_SYSTEM_PYTHON=true" >> $GITHUB_ENV

      - name: Install Packages
        shell: bash
        run: |
          uv pip install --upgrade git+https://github.com/matplotlib/matplotlib
          uv pip install ".[extra,test]"

      - name: Environment Information
        shell: bash
        run: |
          uv pip list

      - name: Run Tests
        shell: bash
        run: |
          make test

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: result-images
          path: result_images/
          if-no-files-found: ignore

  stable p9, latest pandas:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: 3.12

    steps:
      - name: Get latest release with tag from GitHub API
        id: latestrelease
        shell: bash
        run: |
          echo "::set-output name=releasetag::$(curl -s https://api.github.com/repos/has2k1/plotnine/releases/latest | jq '.tag_name' | sed 's/\"//g')"

      - name: Confirm Release Tag
        shell: bash
        run: |
          echo ${{ steps.latestrelease.outputs.latestrelease }}

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.latestrelease.outputs.latestrelease }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install a specific version of uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Make uv use system python
        run: echo "UV_SYSTEM_PYTHON=true" >> $GITHUB_ENV

      - name: Install Packages
        shell: bash
        run: |
          uv pip install --upgrade git+https://github.com/pandas-dev/pandas
          uv pip install ".[extra,test]"

      - name: Environment Information
        shell: bash
        run: |
          uv pip list

      # to do: think about catching deprecations earlier
      - name: Run Tests
        shell: bash
        run: |
          make test

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: result-images
          path: tests/result_images/
          if-no-files-found: ignore

  TYP latest p9, latest matplotlib:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install a specific version of uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Make uv use system python
        run: echo "UV_SYSTEM_PYTHON=true" >> $GITHUB_ENV

      - name: Install Packages
        shell: bash
        run: |
          uv pip install ".[extra,typing]"
          uv pip install --upgrade git+https://github.com/matplotlib/matplotlib

      - name: Environment Information
        shell: bash
        run: |
          uv pip list

      - name: Run Tests
        shell: bash
        run: |
          make typecheck

  TYP latest p9, latest pandas:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install a specific version of uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Make uv use system python
        run: echo "UV_SYSTEM_PYTHON=true" >> $GITHUB_ENV

      - name: Install Packages
        shell: bash
        run: |
          uv pip install ".[extra,typing]"
          uv pip install --upgrade git+https://github.com/pandas-dev/pandas

      - name: Environment Information
        shell: bash
        run: |
          uv pip list

      # to do: think about catching deprecations earlier
      - name: Run Tests
        shell: bash
        run: |
          make test

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: result-images
          path: result_images/
          if-no-files-found: ignore
